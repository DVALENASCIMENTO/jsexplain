export const codeParts = [
  { text: 'const inputFile = document.getElementById("input-file");', class: 'default', tip: 'Seleciona o input para upload de arquivos.' },
  { text: '\nconst gallery = document.getElementById("gallery");', class: 'default', tip: 'Seleciona o container onde as imagens serão exibidas.' },
  { text: '\nlet images = [];', class: 'keyword', tip: 'Array para armazenar as imagens em base64.' },

  { text: '\n\ninputFile.addEventListener("change", (e) => {', class: 'default', tip: 'Quando o usuário seleciona arquivos, dispara evento.' },
  { text: '\n  const files = Array.from(e.target.files);', class: 'default', tip: 'Converte FileList para array para facilitar manipulação.' },
  { text: '\n  files.forEach(file => {', class: 'loop', tip: 'Para cada arquivo selecionado:' },
  { text: '\n    if (!file.type.startsWith("image/")) return;', class: 'default', tip: 'Ignora arquivos que não sejam imagens.' },
  { text: '\n    const reader = new FileReader();', class: 'default', tip: 'Cria um leitor de arquivos para converter imagem em base64.' },
  { text: '\n    reader.onload = () => {', class: 'default', tip: 'Quando a leitura for concluída:' },
  { text: '\n      images.push(reader.result);', class: 'default', tip: 'Adiciona a imagem (base64) no array images.' },
  { text: '\n      renderGallery();', class: 'default', tip: 'Atualiza a galeria para mostrar as imagens.' },
  { text: '\n    };', class: 'default', tip: 'Fim do evento onload do FileReader.' },
  { text: '\n    reader.readAsDataURL(file);', class: 'default', tip: 'Lê o arquivo como URL de dados (base64).' },
  { text: '\n  });', class: 'default', tip: 'Fim do forEach.' },
  { text: '\n});', class: 'default', tip: 'Fim do event listener para mudança no input.' },

  { text: '\n\nfunction renderGallery() {', class: 'default', tip: 'Função para renderizar as imagens na galeria.' },
  { text: '\n  gallery.innerHTML = "";', class: 'default', tip: 'Limpa o conteúdo atual da galeria.' },
  { text: '\n  images.forEach((src, index) => {', class: 'loop', tip: 'Para cada imagem no array:' },
  { text: '\n    const imgDiv = document.createElement("div");', class: 'default', tip: 'Cria um container div para a imagem.' },
  { text: '\n    imgDiv.classList.add("image-item");', class: 'default', tip: 'Adiciona uma classe para estilização.' },
  { text: '\n    imgDiv.innerHTML = `', class: 'default', tip: 'Define o conteúdo HTML da div com a imagem e botão.' },
  { text: '      <img src="${src}" alt="Imagem ${index + 1}">', class: 'default', tip: 'Imagem a ser exibida.' },
  { text: '      <button data-index="${index}" class="remove-btn">Remover</button>', class: 'default', tip: 'Botão para remover a imagem pelo índice.' },
  { text: '    `;', class: 'default', tip: 'Fim do conteúdo HTML.' },
  { text: '\n    gallery.appendChild(imgDiv);', class: 'default', tip: 'Adiciona a div da imagem no container principal.' },
  { text: '\n  });', class: 'default', tip: 'Fim do loop das imagens.' },
  { text: '\n  attachRemoveEvents();', class: 'default', tip: 'Ativa os eventos de remoção nos botões.' },
  { text: '\n}', class: 'default', tip: 'Fim da função renderGallery.' },

  { text: '\n\nfunction attachRemoveEvents() {', class: 'default', tip: 'Função para adicionar eventos aos botões Remover.' },
  { text: '\n  const buttons = document.querySelectorAll(".remove-btn");', class: 'default', tip: 'Seleciona todos os botões Remover.' },
  { text: '\n  buttons.forEach(btn => {', class: 'loop', tip: 'Para cada botão:' },
  { text: '\n    btn.addEventListener("click", () => {', class: 'default', tip: 'Ao clicar no botão:' },
  { text: '\n      const idx = parseInt(btn.dataset.index);', class: 'default', tip: 'Pega o índice da imagem a remover.' },
  { text: '\n      images.splice(idx, 1);', class: 'default', tip: 'Remove a imagem do array.' },
  { text: '\n      renderGallery();', class: 'default', tip: 'Atualiza a galeria após remoção.' },
  { text: '\n    });', class: 'default', tip: 'Fim do evento do clique no botão.' },
  { text: '\n  });', class: 'default', tip: 'Fim do forEach dos botões.' },
  { text: '\n}', class: 'default', tip: 'Fim da função attachRemoveEvents.' },
];
